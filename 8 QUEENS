def is_safe(board, row, col):
    for i in range(row):
        if board[i] == col or abs(board[i]-col) == abs(i-row):
            return False
    return True

def solve_n_queens(n=8):
    def backtrack(row=0):
        if row == n:
            result.append(board[:])
        else:
            for col in range(n):
                if is_safe(board, row, col):
                    board[row] = col
                    backtrack(row+1)
    result = []
    board = [-1]*n
    backtrack()
    return result

# Example usage
solutions = solve_n_queens()
for sol in solutions:
    print(sol)
