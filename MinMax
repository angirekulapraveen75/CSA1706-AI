import math

# Constants
HUMAN = 'O'
AI = 'X'
EMPTY = ' '

# Create an empty board
def create_board():
    return [[EMPTY for _ in range(3)] for _ in range(3)]

# Print the board
def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)

# Check if someone has won
def is_winner(board, player):
    for row in board:
        if all(cell == player for cell in row):
            return True
    for col in range(3):
        if all(board[row][col] == player for row in range(3)):
            return True
    if all(board[i][i] == player for i in range(3)) or \
       all(board[i][2 - i] == player for i in range(3)):
        return True
    return False

# Check for draw
def is_draw(board):
    return all(cell != EMPTY for row in board for cell in row)

# Evaluate board
def evaluate(board):
    if is_winner(board, AI):
        return 1
    elif is_winner(board, HUMAN):
        return -1
    else:
        return 0

# Minimax algorithm
def minimax(board, is_maximizing):
    score = evaluate(board)
    if score != 0 or is_draw(board):
        return score

    if is_maximizing:
        best_score = -math.inf
        for i in range(3):
            for j in range(3):
                if board[i][j] == EMPTY:
                    board[i][j] = AI
                    score = minimax(board, False)
                    board[i][j] = EMPTY
                    best_score = max(best_score, score)
        return best_score
    else:
        best_score = math.inf
        for i in range(3):
            for j in range(3):
                if board[i][j] == EMPTY:
                    board[i][j] = HUMAN
                    score = minimax(board, True)
                    board[i][j] = EMPTY
                    best_score = min(best_score, score)
        return best_score

# Find the best move for the AI
def best_move(board):
    best_score = -math.inf
    move = (-1, -1)
    for i in range(3):
        for j in range(3):
            if board[i][j] == EMPTY:
                board[i][j] = AI
                score = minimax(board, False)
                board[i][j] = EMPTY
                if score > best_score:
                    best_score = score
                    move = (i, j)
    return move

# Game loop
def play_game():
    board = create_board()
    print("Tic Tac Toe - You (O) vs AI (X)")
    print_board(board)

    while True:
        # Human move
        while True:
            try:
                row = int(input("Enter row (0-2): "))
                col = int(input("Enter col (0-2): "))
                if board[row][col] == EMPTY:
                    board[row][col] = HUMAN
                    break
                else:
                    print("Cell already taken.")
            except:
                print("Invalid input.")

        print_board(board)
        if is_winner(board, HUMAN):
            print("You win!")
            break
        if is_draw(board):
            print("It's a draw!")
            break

        # AI move
        ai_row, ai_col = best_move(board)
        board[ai_row][ai_col] = AI
        print("AI plays:")
        print_board(board)
        if is_winner(board, AI):
            print("AI wins!")
            break
        if is_draw(board):
            print("It's a draw!")
            break

if _name_ == "_main_":
    play_game()
